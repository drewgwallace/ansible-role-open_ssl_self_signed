---
# Purpose: Create unencryped private key and csr
# Last Updated: 2018.07.23
# Notes: pyopenssl required (pip install pyopenssl) https://pyopenssl.org/en/stable/install.html

- name: "drewgwallace.open_ssl_self_signed | Generate Private Key"
  local_action:
    # cipher: "AES-256-CBC"
    force: "{{ force_regeneration }}"
    mode: 0640
    module: "openssl_privatekey"
    path: "{{ cert_dir }}/{{ server_name }}_priv.key"
    size: 2048
    state: "present"
    type: "RSA"

- name: "drewgwallace.open_ssl_self_signed | Generate Certificate Signing Request"
  local_action:
    common_name: "{{ server_url }}"
    country_name: "{{ cert_country }}"
    email_address: "{{ cert_email_address }}"
    force: "{{ force_regeneration }}"
    locality_name: "{{ cert_locality }}"
    mode: 0640
    module: "openssl_csr"
    organization_name: "{{ cert_organization }}"
    organizational_unit_name: "{{ cert_organizational_unit }}"
    path: "{{ cert_dir }}/{{ server_name }}.csr"
    privatekey_passphrase: "{{ cert_passphrase }}"
    privatekey_path: "{{ cert_dir }}/{{ server_name }}_priv.key"
    state: present
    state_or_province_name: "{{ cert_state }}"
    subject_alt_name:
      - "DNS: {{ server_url }}"
      - "DNS: {{ server_url.split('.')[0] }}"
